name: Publish

on: 
  workflow_dispatch:
    inputs:
      release:
        required: false
        type: string
        default: "main"
    
      prerelease:
        required: false
        type: boolean
        default: true

  workflow_call:
    inputs:
      release:
        required: true
        type: string

      prerelease:
        required: true
        type: boolean
        
        
jobs:
  build_sdist:
    name: Build source dist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout library
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.4.1

      - name: Install Poetry dependencies
        run: poetry install --no-interaction --no-root

      - name: Build
        run: poetry build --format sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    
    steps:
    - name: Checkout library
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.20.0
      env:
        CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=11.0

    - name: Download artifact
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl


  upload_pypi:
    name: Publish on PyPI
    runs-on: ubuntu-latest
    environment: test-pypi

    needs: [build_sdist, build_wheels]
    
    permissions:
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          
          
  github_release:
    name: Publish on Github
    runs-on: ubuntu-latest
    
    needs: [upload_pypi]

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
    
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          ${{ inputs.release }}
          --prerelease=${{ inputs.prerelease }}
          --repo '${{ github.repository }}'
          --generate-notes
          
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ inputs.release }}' dist/**
          --repo '${{ github.repository }}'